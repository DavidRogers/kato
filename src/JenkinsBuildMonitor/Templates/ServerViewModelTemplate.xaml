<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:cal="http://www.caliburnproject.org"
					xmlns:jenkinsApiClient="clr-namespace:JenkinsApiClient;assembly=JenkinsApiClient"
					xmlns:src="clr-namespace:Kato"
					xmlns:resources="clr-namespace:Kato.Resources">

	<DataTemplate DataType="{x:Type src:JobViewModel}" x:Key="JobListItemTemplate">
		<Border CornerRadius="4" x:Name="MainBorder" Padding="2,2,4,0"
			Visibility="{Binding IsSubscribed, Converter={x:Static resources:Converters.BoolToVisibilityConverter}}"
			cal:Message.Attach="[Event MouseDown] = [Action OpenInBrowser($executionContext)]">
			<Border.Background>
				<SolidColorBrush x:Name="BackgroundBrush" Color="Transparent" />
			</Border.Background>
			<Border.ContextMenu>
				<ContextMenu>
					<MenuItem Header="View console output" cal:Message.Attach="ViewConsoleOutput" />
					<Separator />
					<MenuItem Header="Force Build" cal:Message.Attach="ForceBuild" />
					<Separator />
					<MenuItem Header="Enable Job" cal:Message.Attach="EnableBuild" />
					<MenuItem Header="Disable Job" cal:Message.Attach="DisableBuild" />
				</ContextMenu>
			</Border.ContextMenu>
			<Grid x:Name="MainGrid">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="28" />
					<ColumnDefinition Width="28" />
					<ColumnDefinition Width="250" />
					<ColumnDefinition Width="160" />
					<ColumnDefinition Width="100" />
					<ColumnDefinition Width="100" />
					<ColumnDefinition Width="80" />
				</Grid.ColumnDefinitions>

				<Ellipse Margin="0,0,5,5"
					Fill="{Binding Color, Converter={x:Static resources:Converters.StatusToColorConverter}}"
					Width="20" Height="20"
					ToolTip="{Binding Status, Converter={x:Static resources:Converters.StatusToHumanReadableConverter}}">
					<Ellipse.Effect>
						<DropShadowEffect ShadowDepth="2" BlurRadius="5" Opacity=".5" Direction="290" />
					</Ellipse.Effect>
				</Ellipse>
				<Image Grid.Column="1" Width="24">
					<Image.ToolTip>
						<ItemsControl ItemsSource="{Binding HealthReports}">
							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="{x:Type jenkinsApiClient:HealthReport}">
									<TextBlock Text="{Binding Description, Mode=OneTime}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</Image.ToolTip>
					<Image.Style>
						<Style TargetType="Image">
							<Style.Triggers>
								<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=101}" Value="True">
									<Setter Property="Source" Value="/Images/health-80plus.png" />
								</DataTrigger>
								<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=80}" Value="True">
									<Setter Property="Source" Value="/Images/health-60to79.png" />
								</DataTrigger>
								<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=60}" Value="True">
									<Setter Property="Source" Value="/Images/health-40to59.png" />
								</DataTrigger>
								<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=40}" Value="True">
									<Setter Property="Source" Value="/Images/health-20to39.png" />
								</DataTrigger>
								<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=20}" Value="True">
									<Setter Property="Source" Value="/Images/health-00to19.png" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Image.Style>
				</Image>
				<TextBlock Grid.Column="2" VerticalAlignment="Top" Margin="3,3,0,0"
					Text="{Binding Name, Mode=OneTime}"
					FontSize="12"
					ToolTip="{Binding Description, Mode=OneTime}"
					TextTrimming="CharacterEllipsis"/>
				<TextBlock Grid.Column="3" VerticalAlignment="Center" DataContext="{Binding LastBuild}">
					<Run Text="{Binding TimeStamp, Converter={x:Static resources:Converters.TimeAgo}}" />
				</TextBlock>
				<TextBlock Grid.Column="4" VerticalAlignment="Center" DataContext="{Binding LastBuild}">
					<Run Text="{Binding Duration, StringFormat=hh\\:mm\\:ss}" />
				</TextBlock>
				<TextBlock Grid.Column="5" VerticalAlignment="Center" DataContext="{Binding LastBuild}">
					<Run Text="{Binding EstimatedDuration, StringFormat=hh\\:mm\\:ss}" />
				</TextBlock>
				<TextBlock Grid.Column="6" VerticalAlignment="Center" DataContext="{Binding LastBuild}">
					<Run Text="{Binding Number}" />
				</TextBlock>
			</Grid>
			<Border.Triggers>
				<EventTrigger RoutedEvent="Control.MouseEnter" SourceName="MainBorder">
					<EventTrigger.Actions>
						<BeginStoryboard >
							<Storyboard TargetName="BackgroundBrush">
								<ColorAnimation Duration="0:0:0" Storyboard.TargetProperty="Color" To="BurlyWood" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
				<EventTrigger RoutedEvent="Control.MouseLeave" SourceName="MainBorder">
					<EventTrigger.Actions>
						<BeginStoryboard >
							<Storyboard TargetName="BackgroundBrush">
								<ColorAnimation Duration="0:0:0" Storyboard.TargetProperty="Color" To="Transparent" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
			</Border.Triggers>
		</Border>
	</DataTemplate>

	<DataTemplate x:Key="MainListViewItemTemplate" DataType="{x:Type src:AppModel}">
		<DockPanel>
			<StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Left">
				<TextBlock FontWeight="Bold" Margin="62,0,0,0" Width="246">Name</TextBlock>
				<TextBlock FontWeight="Bold" Width="160">Last Build</TextBlock>
				<TextBlock FontWeight="Bold" Width="100">Duration</TextBlock>
				<TextBlock FontWeight="Bold" Width="100">Est. Duration</TextBlock>
				<TextBlock FontWeight="Bold" Width="80">Build #</TextBlock>
			</StackPanel>
			<ItemsControl DockPanel.Dock="Bottom" ItemsSource="{Binding SubscribedJobs, Mode=OneWay}" ItemTemplate="{StaticResource JobListItemTemplate}" />
		</DockPanel>
	</DataTemplate>

	<DataTemplate DataType="{x:Type src:JobViewModel}" x:Key="JobGridItemTemplate">
		<Border x:Name="MainBorder" BorderThickness="2"
			ToolTip="{Binding Status, Converter={x:Static resources:Converters.StatusToHumanReadableConverter}}"
			Visibility="{Binding IsSubscribed, Converter={x:Static resources:Converters.BoolToVisibilityConverter}}"
			cal:Message.Attach="[Event MouseDown] = [Action OpenInBrowser($executionContext)]">
			<Border.BorderBrush>
				<SolidColorBrush x:Name="BorderBrush" Color="Transparent" />
			</Border.BorderBrush>
			<Border.ContextMenu>
				<ContextMenu>
					<MenuItem Header="View console output" cal:Message.Attach="ViewConsoleOutput" />
					<Separator />
					<MenuItem Header="Force Build" cal:Message.Attach="ForceBuild" />
					<Separator />
					<MenuItem Header="Enable Job" cal:Message.Attach="EnableBuild" />
					<MenuItem Header="Disable Job" cal:Message.Attach="DisableBuild" />
				</ContextMenu>
			</Border.ContextMenu>
			<Border.Effect>
				<DropShadowEffect ShadowDepth="2" BlurRadius="5" Opacity=".5" Direction="290" />
			</Border.Effect>
			<Grid x:Name="MainGrid" MinHeight="100" MinWidth="400">
				<ProgressBar Value="{Binding LastBuild.BuildPercentage, Mode=OneWay}" Minimum="0" Maximum="100"
					Background="{Binding Color, Converter={x:Static resources:Converters.StatusToColorConverter}, ConverterParameter=true}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
					Padding="10,4">
					<ProgressBar.Foreground>
						<SolidColorBrush Color="{Binding Color, Converter={x:Static resources:Converters.StatusToBuildingColorConverter}}" />
					</ProgressBar.Foreground>
				</ProgressBar>

				<StackPanel Orientation="Horizontal" Margin="10,0"
					VerticalAlignment="Center" HorizontalAlignment="Center" >
					<Image Width="24" VerticalAlignment="Center" Margin="0,3,0,0">
						<Image.ToolTip>
							<ItemsControl ItemsSource="{Binding HealthReports}">
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="{x:Type jenkinsApiClient:HealthReport}">
										<TextBlock Text="{Binding Description, Mode=OneTime}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</Image.ToolTip>
						<Image.Style>
							<Style TargetType="Image">
								<Style.Triggers>
									<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=101}" Value="True">
										<Setter Property="Source" Value="/Images/health-80plus.png" />
									</DataTrigger>
									<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=80}" Value="True">
										<Setter Property="Source" Value="/Images/health-60to79.png" />
									</DataTrigger>
									<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=60}" Value="True">
										<Setter Property="Source" Value="/Images/health-40to59.png" />
									</DataTrigger>
									<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=40}" Value="True">
										<Setter Property="Source" Value="/Images/health-20to39.png" />
									</DataTrigger>
									<DataTrigger Binding="{Binding HealthReports[0].Score, Converter={x:Static resources:Converters.IsLessThan}, ConverterParameter=20}" Value="True">
										<Setter Property="Source" Value="/Images/health-00to19.png" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Image.Style>
					</Image>
					<TextBlock Margin="3,0"
						FontWeight="Bold"
						Foreground="White"
						Text="{Binding Name, Mode=OneTime}"
						FontSize="20"
						VerticalAlignment="Center"
						ToolTip="{Binding Description, Mode=OneTime}"
						TextTrimming="CharacterEllipsis"/>
				</StackPanel>

				<TextBlock Margin="3,1"
					Foreground="White"
					VerticalAlignment="Top"
					HorizontalAlignment="Left"
					ToolTip="This job is in the queue waiting to be built."
					Visibility="{Binding InQueue, Converter={x:Static resources:Converters.BoolToVisibilityConverter}}"
					>
					In queue
				</TextBlock>

				<TextBlock Margin="3,1"
					Foreground="White"
					VerticalAlignment="Bottom"
					HorizontalAlignment="Right"
					ToolTip="Last build time"
					DataContext="{Binding LastBuild}">
					<Run Text="{Binding TimeStamp, Converter={x:Static resources:Converters.TimeAgo}}" />
				</TextBlock>
				<TextBlock	Margin="3,0,0,1"
						Foreground="White"
						VerticalAlignment="Bottom" HorizontalAlignment="Left"
						DataContext="{Binding LastBuild}" ToolTip="Last build duration / estimated duration">
					<Run Text="{Binding Duration, Converter={x:Static resources:Converters.PrettyTimeSpanConverter}}" />
					<Run Text="/" />
					<Run Text="{Binding EstimatedDuration, Converter={x:Static resources:Converters.PrettyTimeSpanConverter}}" />
				</TextBlock>
				<TextBlock ToolTip="Current build #"
						Foreground="White" 
						Margin="0,0,3,1"
						VerticalAlignment="Top"
						HorizontalAlignment="Right"
						DataContext="{Binding LastBuild}">
					<TextBlock Text="#" />
					<TextBlock Margin="-5,0,0,0" Text="{Binding Number}" />
				</TextBlock>
			</Grid>
			<Border.Triggers>
				<EventTrigger RoutedEvent="Control.MouseEnter" SourceName="MainBorder">
					<EventTrigger.Actions>
						<BeginStoryboard >
							<Storyboard TargetName="BorderBrush">
								<ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Color" To="BurlyWood" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
				<EventTrigger RoutedEvent="Control.MouseLeave" SourceName="MainBorder">
					<EventTrigger.Actions>
						<BeginStoryboard >
							<Storyboard TargetName="BorderBrush">
								<ColorAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Color" To="Transparent" />
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
			</Border.Triggers>
		</Border>
	</DataTemplate>

	<DataTemplate x:Key="MainGridViewItemTemplate" DataType="{x:Type src:AppModel}">
		<ItemsControl ItemsSource="{Binding SubscribedJobs, Mode=OneWay}" ItemTemplate="{StaticResource JobGridItemTemplate}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</DataTemplate>
</ResourceDictionary>