<Page x:Class="Kato.Pages.Subscribe"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mui="http://firstfloorsoftware.com/ModernUI"
	xmlns:cal="http://www.caliburnproject.org"
	xmlns:resources="clr-namespace:Kato.Resources"
	xmlns:src="clr-namespace:Kato"
	MinHeight="400"
	MinWidth="600">

	<DockPanel>
		<Grid DockPanel.Dock="Top">
			<TextBlock FontWeight="Bold" VerticalAlignment="Center">Click on one or more Jobs to subscribe to it</TextBlock>
			<StackPanel Orientation="Horizontal" 
			HorizontalAlignment="Right"
			Margin="0,0,0,4">

				<Grid Name="ServerDefinitionGrid" Width="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
					</Grid.ColumnDefinitions>
					<Border  x:Name="AddServerBorder"
                             Width="0"
                             Grid.Column="0"
                             BorderBrush="{Binding IsAddServerUrlValid, Converter={x:Static resources:Converters.IsValidToBrush}}" 
                             BorderThickness="1">
						<TextBox x:Name="AddServerBox" 
                                             Padding="4 2"
                                             cal:Message.Attach="[Event KeyUp]=[Action AddServerEnter($executionContext)]"
                                             Text="{Binding NewServerUrl, UpdateSourceTrigger=PropertyChanged}">
							<resources:WatermarkService.Watermark>
								<TextBlock Margin="5,3,0,0">http://jenkins.yourdomain.com</TextBlock>
							</resources:WatermarkService.Watermark>
						</TextBox>
					</Border>

					<Label TextBlock.TextAlignment="Center" Padding="4 4" Grid.Column="1">Auth required</Label>
					<CheckBox x:Name="AuthRequiredCheck" IsChecked="{Binding NewServerAuthRequired, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2"></CheckBox>
				</Grid>

				<Button Margin="4,0,0,0" Padding="4 2" x:Name="AddServerButton"
				cal:Message.Attach="AddServer"
				ToolTip="Click here to add a new Jenkins server"
				Click="AddServerButton_Click">add server</Button>
				<StackPanel.Triggers>
					<EventTrigger RoutedEvent="Button.Click" SourceName="AddServerButton">
						<EventTrigger.Actions>
							<BeginStoryboard>
								<Storyboard TargetName="ServerDefinitionGrid">
									<DoubleAnimation To="320" Storyboard.TargetProperty="Width" />
								</Storyboard>
							</BeginStoryboard>
							<BeginStoryboard>
								<Storyboard TargetName="AddServerBorder">
									<DoubleAnimation To="200" Storyboard.TargetProperty="Width" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger.Actions>
					</EventTrigger>
					<EventTrigger RoutedEvent="TextBox.LostFocus" SourceName="ServerDefinitionGrid">
						<EventTrigger.Actions>
							<BeginStoryboard>
								<Storyboard TargetName="ServerDefinitionGrid">
									<DoubleAnimation BeginTime="0:0:1" To="0" Storyboard.TargetProperty="Width"/>
								</Storyboard>
							</BeginStoryboard>
							<BeginStoryboard>
								<Storyboard TargetName="AddServerBorder">
									<DoubleAnimation BeginTime="0:0:1" To="0" Storyboard.TargetProperty="Width"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger.Actions>
					</EventTrigger>
				</StackPanel.Triggers>
			</StackPanel>
		</Grid>
		<Grid DockPanel.Dock="Top">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="80"></ColumnDefinition>
				<ColumnDefinition Width="80"></ColumnDefinition>
				<ColumnDefinition Width="80"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<Button Margin="4,0,0,4" Padding="4 2" x:Name="AllSelectionButton" Grid.Column="0"
				cal:Message.Attach="SelectAll"
				ToolTip="Click here to toggle project selection">Select All</Button>

			<Button Margin="4,0,0,4" Padding="4 2" x:Name="ClearSelectionButton" Grid.Column="1"
				cal:Message.Attach="ClearSelection"
				ToolTip="Click here to toggle project selection">Clear</Button>

			<TextBox DockPanel.Dock="Top" x:Name="FilterBox" Padding="3" FontSize="12" Grid.Column="3"
                     Margin="4,0,0,4"
                     Text="{Binding SubscribeFilter, UpdateSourceTrigger=PropertyChanged}"
                     cal:Message.Attach="[Event KeyUp]=[Action ClearFilter($executionContext)]">
				<resources:WatermarkService.Watermark>
					<TextBlock Margin="5,3,0,0">type here to filter jobs</TextBlock>
				</resources:WatermarkService.Watermark>
			</TextBox>
		</Grid>


		<ScrollViewer DockPanel.Dock="Bottom" VerticalScrollBarVisibility="Auto">
			<ItemsControl ItemsSource="{Binding Servers, Mode=OneTime}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate DataType="{x:Type src:ServerViewModel}">
						<DockPanel>
							<TextBlock DockPanel.Dock="Top">
								<Run FontWeight="Bold" Text="{Binding DomainUrl, Mode=OneTime}" />
								<Run>:</Run>
								<Run Text="{Binding Description, Mode=OneTime}" />
							</TextBlock>
							<ItemsControl ItemsSource="{Binding Jobs, Mode=OneTime}" HorizontalContentAlignment="Stretch">
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="{x:Type src:JobViewModel}">
										<DockPanel>
											<Rectangle Margin="0,0,4,0"
												Fill="{Binding Color, Converter={x:Static resources:Converters.StatusToColorConverter}}"
												DockPanel.Dock="Left"
												Width="5" Height="20"
												Visibility="{Binding IsHidden, Converter={x:Static resources:Converters.ReverseBoolToVisibilityConverter}}"
												ToolTip="{Binding Status, Converter={x:Static resources:Converters.StatusToHumanReadableConverter}}" />
											<Grid HorizontalAlignment="Stretch"
												DockPanel.Dock="Right"
												Margin="4"
												ToolTip="{Binding Name, Mode=OneTime}"
												Visibility="{Binding IsHidden, Converter={x:Static resources:Converters.ReverseBoolToVisibilityConverter}}">

												<mui:ModernButton Visibility="{Binding IsSubscribed, Converter={x:Static resources:Converters.ReverseBoolToVisibilityConverter}}"
													cal:Message.Attach="Subscribe"
													Content="{Binding Name, Mode=OneTime}"
													HorizontalAlignment="Left">
													<!--<TextBlock VerticalAlignment="Center" Margin="6,0,0,0" Text="{Binding Name, Mode=OneTime}"></TextBlock>-->
												</mui:ModernButton>
												<mui:ModernButton Visibility="{Binding IsSubscribed, Converter={x:Static resources:Converters.BoolToVisibilityConverter}}"
													cal:Message.Attach="Subscribe"
													IconData="{StaticResource GeometryGroup}"
													HorizontalAlignment="Left"
													Content="{Binding Name, Mode=OneTime}">
												</mui:ModernButton>
											</Grid>
										</DockPanel>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DockPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>
	</DockPanel>
</Page>

